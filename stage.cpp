//----------------------------------
//	IsekaiKanchoProject
//	By ゲヱム道館門下生
//----------------------------------

#include "DxLib.h"
#include "main.h"
#include "stage.h"

// マップ画像用
int FieldMap[3][192];

XY map[MAP_Y_FIELD][MAP_X_FIELD];
XY mapPos;

// フィールドマップ
int Field[MAP_Y_FIELD][MAP_X_FIELD] = {
	{192,193,194,195,196,197,198,199,  0,  0,  0,  0,  0,256,257,257,257,257,258, 30, 31,256,257,257,257,257,257,257,257,257,258,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{200,201,202,203,204,205,206,207,  0,  0,  0,  0,  0,256,257,257,257,257,258, 30, 31,256,257,257,257,257,  0,  0,  0,257,258,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{208,209,210,211,212,213,214,215,  0,  0,  0,  0,  0,264,265,265,265,265,266, 30, 31,264,265,265,265,265,  0,  0,  0,265,266,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{216,217,218,219,220,221,222,223,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{224,225,226,227,228,229,230,231,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{ 20, 15, 15, 15, 21, 22, 23,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{ 36, 14, 14,150, 31, 38, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0, 54, 30, 31,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,  0, 30, 31,  0,  0, 54,  0,  0,  0,  0,  0,  0,  0,  0, 54,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,  0, 30, 31,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,  0, 30,166, 15, 15, 15, 21,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,  0,151, 14, 14, 14, 14, 37,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 54,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,  0,  0, 46, 46,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,  0,  0, 46, 46, 46, 46,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,  0,  0, 46, 46, 46, 46,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 54,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,  0,  0, 46, 46, 46, 46,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,192,193,198,199,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 54,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,200,201,202,207,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,208,209,210,215,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 20, 15, 15, 15, 21,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,216,217,218,223,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 36, 14, 14, 14, 37,  0,  0,  0,  0,  0,  0,  0,  0},
	{  0,  0,224,225,226,231,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,253,253,253,253,253,253,253,253,253,  0,  0,  0,  0,  0,  0},
	{192,193,198,199,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,242,281,281,281,281,281,281,281,281,281,240,  0,  0,  0,  0,  0},
	{200,201,202,207,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,242,307,307,308,307,307,308,307,306,307,240,  0,  0,  0,  0,  0},
	{208,209,210,215,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,242,307,306,307,304,305,306,307,307,308,240,  0,  0,  0,  0,  0},
	{216,217,218,223,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,242,306,308,307,312,313,306,307,306,307,240,  0,  0,  0,  0,  0},
	{224,225,226,231,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,242,308,307,306,307,307,306,307,308,306,240,  0,  0,  0,  0,  0},
};


// ステージ関連の初期化
void StageSystemInit(void)
{

	// ステージの描画読み込み
	// 地上のマップ
	LoadDivGraph("image/stage/field_grass.png",  192, 16, 12, MAP_IMAGESIZE_X, MAP_IMAGESIZE_Y, FieldMap[0]);
	LoadDivGraph("image/stage/field_forest.png", 128,  8, 16, MAP_IMAGESIZE_X, MAP_IMAGESIZE_Y, FieldMap[1]);
	LoadDivGraph("image/stage/field_obj.png",    256, 16, 16, MAP_IMAGESIZE_X, MAP_IMAGESIZE_Y, FieldMap[2]);

}

// ステージのゲーム毎の初期化
void StageGameInit(void)
{
	mapPos = { 0,0 };
}

XY GetStageSize(void)
{
	return { MAP_X_FIELD,MAP_Y_FIELD };
}

// ステージ関連の描画
void StageGameDraw(XY mapPos)
{
	// フィールド用
	for (int y = 0; y <= MAP_Y_FIELD; y++)
	{
		for (int x = 0; x <= MAP_X_FIELD; x++)
		{
			if (Field[y][x] > 192)
			{
				DrawGraph(x * MAP_IMAGESIZE_X - mapPos.x, y * MAP_IMAGESIZE_Y - mapPos.y, FieldMap[1][Field[y][x] - 192], true);

			}
			else
			{
				DrawGraph(x * MAP_IMAGESIZE_X - mapPos.x, y * MAP_IMAGESIZE_Y - mapPos.y, FieldMap[0][Field[y][x]], true);
			}
		}
	}
}

// プレイヤーが次のブロックを通過できるか判定
bool IsPass(XY pos)
{
	XY Index;

	Index = PosToIndex(pos);

	switch (Field[Index.y][Index.x])
	{
	// 土凹
	case   6:
	// 土凹集団
	case  22:
	case  23:
	case  38:
	case  39:
	// 木
	case 192:
	case 193:
	case 194:
	case 195:
	case 196:
	case 197:
	case 198:
	case 199:
	case 200:
	case 201:
	case 202:
	case 203:
	case 204:
	case 205:
	case 206:
	case 207:
	case 208:
	case 209:
	case 210:
	case 211:
	case 212:
	case 213:
	case 214:
	case 215:
	case 216:
	case 217:
	case 218:
	case 219:
	case 220:
	case 221:
	case 222:
	case 223:
	case 224:
	case 225:
	case 226:
	case 227:
	case 228:
	case 229:
	case 230:
	case 231:
	// 崖
	case 240:
	case 242:
	case 256:
	case 257:
	case 258:
	case 264:
	case 265:
	case 266:
	case 281:
	case 253:
		return false;
	default:
		break;
	}

	return true;
}

// プレイヤーの座標をマップインデックスにして返す
XY PosToIndex(XY pos)
{
	XY rtnIndex;

	rtnIndex.x = pos.x / MAP_IMAGESIZE_X;
	rtnIndex.y = pos.y / MAP_IMAGESIZE_Y;

	return rtnIndex;
}

XY StageControl(XY playerMoveDiff)
{
	mapPos.x += playerMoveDiff.x;
	mapPos.y += playerMoveDiff.y;

	return mapPos;
}

XY GetMapPos(void)
{
	return mapPos;
}