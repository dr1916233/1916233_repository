//----------------------------------
//	IsekaiKanchoProject
//	By ゲヱム道館門下生
//----------------------------------

#include "DxLib.h"
#include "main.h"
#include "stage.h"

// マップ画像
int FieldMap1[128];
int FieldMap2[192];

XY map[MAP_Y_FIELD][MAP_X_FIELD];
XY mapPos;

// フィールドマップ
int Field[MAP_Y_FIELD][MAP_X_FIELD] = {
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

// 木
int wood[6][4] = {
	{0,1,6,7},
	{8,9,10,15},
	{16,17,18,23},
	{24,25,26,31},
	{32,33,34,39},
	{40,41,42,47},
};



// ステージ関連の初期化
void StageSystemInit(void)
{

	// ステージの描画読み込み
	// 地上のマップ
	LoadDivGraph("image/stage/field_forest.png", 128, 8, 16, MAP_IMAGESIZE_X, MAP_IMAGESIZE_Y, FieldMap1);
	LoadDivGraph("image/stage/field_grass.png", 192, 16, 12, MAP_IMAGESIZE_X, MAP_IMAGESIZE_Y, FieldMap2);
}

// ステージのゲーム毎の初期化
void StageGameInit(void)
{
	mapPos = { 0,0 };
}

XY GetStageSize(void)
{
	return { MAP_X_FIELD,MAP_Y_FIELD };
}

// ステージ関連の描画
void StageGameDraw(XY mapPos)
{
	// フィールド用
	for (int y = 0; y <= MAP_Y_FIELD; y++)
	{
		for (int x = 0; x <= MAP_X_FIELD; x++)
		{
			DrawGraph(x * MAP_IMAGESIZE_X -mapPos.x, y * MAP_IMAGESIZE_Y - mapPos.y, FieldMap2[Field[y][x]], true);
		}
	}
	// 木用
	for (int y = 0; y <= 4; y++)
	{
		for (int x = 0; x <= 3; x++)
		{
			DrawGraph(x * MAP_IMAGESIZE_X - mapPos.x, y * MAP_IMAGESIZE_Y - mapPos.y, FieldMap1[wood[y][x]], true);
		}
	}
}

XY StageControl(XY playerMoveDiff)
{
	mapPos.x += playerMoveDiff.x;
	mapPos.y += playerMoveDiff.y;

	return mapPos;
}

XY GetMapPos(void)
{
	return mapPos;
}